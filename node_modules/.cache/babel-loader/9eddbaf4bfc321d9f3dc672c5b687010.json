{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hristijan.hristov\\\\Desktop\\\\weather-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport MainWeatherWindow from './components/MainWeatherWindow';\nimport CityInput from './components/CityInput';\nimport WeatherBox from './components/WeatherBox';\n\nfunction App(props) {\n  const [city, setCity] = useState('');\n  const [days, setDays] = useState({});\n  /*\n    state = {\n      city: undefined,\n      days: new Array(5)\n    };\n  */\n\n  const updateState = data => {\n    const city = data.city.name;\n    const days = [];\n    const dayIndices = getDayIndices(data);\n\n    for (let i = 0; i < 5; i++) {\n      days.push({\n        date: data.list[dayIndices[i]].dt_txt,\n        weather_desc: data.list[dayIndices[i]].weather[0].description,\n        icon: data.list[dayIndices[i]].weather[0].icon,\n        temp: data.list[dayIndices[i]].main.temp\n      });\n    }\n\n    this.setState({\n      city: city,\n      days: days\n    });\n  };\n\n  const makeApiCall = async city => {\n    const api_data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=b8490eee4d1b0cf4d7412bc769e97590`).then(resp => resp.json());\n\n    if (api_data.cod === '200') {\n      await updateState(api_data);\n      return true;\n    } else return false;\n  };\n\n  const getDayIndices = data => {\n    let dayIndices = [];\n    dayIndices.push(0);\n    let index = 0;\n    let tmp = data.list[index].dt_txt.slice(8, 10);\n\n    for (let i = 0; i < 4; i++) {\n      while (tmp === data.list[index].dt_txt.slice(8, 10) || data.list[index].dt_txt.slice(11, 13) !== '15') {\n        index++;\n      }\n\n      dayIndices.push(index);\n      tmp = data.list[index].dt_txt.slice(8, 10);\n    }\n\n    return dayIndices;\n  };\n\n  const WeatherBoxes = () => {\n    const weatherBoxes = this.state.days.slice(1).map(day => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(WeatherBox, Object.assign({}, day, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }))));\n    return React.createElement(\"ul\", {\n      id: weatherBoxes,\n      className: \"weather-box-list\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, weatherBoxes);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(MainWeatherWindow, {\n    data: this.state.days[0],\n    city: this.state.city,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(CityInput, {\n    city: this.state.city,\n    makeApiCall: this.makeApiCall.bind(this),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(WeatherBoxes, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hristijan.hristov/Desktop/weather-app/src/App.js"],"names":["React","useEffect","useState","MainWeatherWindow","CityInput","WeatherBox","App","props","city","setCity","days","setDays","updateState","data","name","dayIndices","getDayIndices","i","push","date","list","dt_txt","weather_desc","weather","description","icon","temp","main","setState","makeApiCall","api_data","fetch","then","resp","json","cod","index","tmp","slice","WeatherBoxes","weatherBoxes","state","map","day","bind"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport MainWeatherWindow from './components/MainWeatherWindow';\nimport CityInput from './components/CityInput';\nimport WeatherBox from './components/WeatherBox';\n\nfunction App (props) {\n\n  const [city, setCity] = useState('');\n  const [days, setDays] = useState({});\n\n\n\n/*\n  state = {\n    city: undefined,\n    days: new Array(5)\n  };\n*/\n\n  const updateState = data => {\n    const city = data.city.name;\n    const days = [];\n    const dayIndices = getDayIndices(data);\n\n    for (let i = 0; i < 5; i++) {\n      days.push({\n        date: data.list[dayIndices[i]].dt_txt,\n        weather_desc: data.list[dayIndices[i]].weather[0].description,\n        icon: data.list[dayIndices[i]].weather[0].icon,\n        temp: data.list[dayIndices[i]].main.temp\n      });\n    }\n\n    this.setState({\n      city: city,\n      days: days\n    });\n  };\n\n  const makeApiCall = async city => {\n    const api_data = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=b8490eee4d1b0cf4d7412bc769e97590`\n    ).then(resp => resp.json());\n\n    if (api_data.cod === '200') {\n      await updateState(api_data);\n      return true;\n    } else return false;\n  };\n\n\n  const getDayIndices = data => {\n    let dayIndices = [];\n    dayIndices.push(0);\n\n    let index = 0;\n    let tmp = data.list[index].dt_txt.slice(8, 10);\n\n    for (let i = 0; i < 4; i++) {\n      while (\n          tmp === data.list[index].dt_txt.slice(8, 10) ||\n          data.list[index].dt_txt.slice(11, 13) !== '15'\n          ) {\n        index++;\n      }\n      dayIndices.push(index);\n      tmp = data.list[index].dt_txt.slice(8, 10);\n    }\n    return dayIndices;\n  };\n\n    const WeatherBoxes = () => {\n      const weatherBoxes = this.state.days.slice(1).map(day => (\n          <li>\n            <WeatherBox {...day} />\n          </li>\n      ));\n\n      return <ul id={weatherBoxes} className='weather-box-list'>{weatherBoxes}</ul>;\n    };\n\n    return (\n        <div className='App'>\n          <header className='App-header'>\n            <MainWeatherWindow data={this.state.days[0]} city={this.state.city}>\n              <CityInput city={this.state.city} makeApiCall={this.makeApiCall.bind(this)} />\n              <WeatherBoxes />\n            </MainWeatherWindow>\n          </header>\n        </div>\n    );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}