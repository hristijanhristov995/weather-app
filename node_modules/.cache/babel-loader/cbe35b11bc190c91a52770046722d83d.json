{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hristijan.hristov\\\\Desktop\\\\weather-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport MainWeatherWindow from './components/MainWeatherWindow';\nimport CityInput from './components/CityInput';\nimport WeatherBox from './components/WeatherBox';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      city: undefined,\n      days: new Array(5)\n    };\n\n    this.updateState = data => {\n      const city = data.city.name;\n      const days = [];\n      const dayIndices = this.getDayIndices(data);\n\n      for (let i = 0; i < 5; i++) {\n        days.push({\n          date: data.list[dayIndices[i]].dt_txt,\n          weather_desc: data.list[dayIndices[i]].weather[0].description,\n          icon: data.list[dayIndices[i]].weather[0].icon,\n          temp: data.list[dayIndices[i]].main.temp\n        });\n      }\n\n      this.setState({\n        city: city,\n        days: days\n      });\n    };\n\n    this.makeApiCall = async city => {\n      const api_data = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=b8490eee4d1b0cf4d7412bc769e97590`).then(resp => resp.json());\n\n      if (api_data.cod === '200') {\n        await this.updateState(api_data);\n        return true;\n      } else return false;\n    };\n\n    this.getDayIndices = data => {\n      let dayIndices = [];\n      dayIndices.push(0);\n      let index = 0;\n      let tmp = data.list[index].dt_txt.slice(8, 10);\n\n      for (let i = 0; i < 4; i++) {\n        while (tmp === data.list[index].dt_txt.slice(8, 10) || data.list[index].dt_txt.slice(11, 13) !== '15') {\n          index++;\n        }\n\n        dayIndices.push(index);\n        tmp = data.list[index].dt_txt.slice(8, 10);\n      }\n\n      return dayIndices;\n    };\n  }\n\n  render() {\n    const WeatherBoxes = () => {\n      const weatherBoxes = this.state.days.slice(1).map(day => React.createElement(\"li\", {\n        id: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(WeatherBox, Object.assign({}, day, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }))));\n      return React.createElement(\"ul\", {\n        id: weatherBoxes,\n        className: \"weather-box-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, weatherBoxes);\n    };\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(MainWeatherWindow, {\n      data: this.state.days[0],\n      city: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(CityInput, {\n      city: this.state.city,\n      makeApiCall: this.makeApiCall.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(WeatherBoxes, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/hristijan.hristov/Desktop/weather-app/src/App.js"],"names":["React","Component","MainWeatherWindow","CityInput","WeatherBox","App","state","city","undefined","days","Array","updateState","data","name","dayIndices","getDayIndices","i","push","date","list","dt_txt","weather_desc","weather","description","icon","temp","main","setState","makeApiCall","api_data","fetch","then","resp","json","cod","index","tmp","slice","render","WeatherBoxes","weatherBoxes","map","day","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport MainWeatherWindow from './components/MainWeatherWindow';\nimport CityInput from './components/CityInput';\nimport WeatherBox from './components/WeatherBox';\n\nclass App extends Component {\n  state = {\n    city: undefined,\n    days: new Array(5)\n  };\n\n  updateState = data => {\n    const city = data.city.name;\n    const days = [];\n    const dayIndices = this.getDayIndices(data);\n\n    for (let i = 0; i < 5; i++) {\n      days.push({\n        date: data.list[dayIndices[i]].dt_txt,\n        weather_desc: data.list[dayIndices[i]].weather[0].description,\n        icon: data.list[dayIndices[i]].weather[0].icon,\n        temp: data.list[dayIndices[i]].main.temp\n      });\n    }\n\n    this.setState({\n      city: city,\n      days: days\n    });\n  };\n\n  makeApiCall = async city => {\n    const api_data = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=${city}&APPID=b8490eee4d1b0cf4d7412bc769e97590`\n    ).then(resp => resp.json());\n\n    if (api_data.cod === '200') {\n      await this.updateState(api_data);\n      return true;\n    } else return false;\n  };\n\n\n  getDayIndices = data => {\n    let dayIndices = [];\n    dayIndices.push(0);\n\n    let index = 0;\n    let tmp = data.list[index].dt_txt.slice(8, 10);\n\n    for (let i = 0; i < 4; i++) {\n      while (\n          tmp === data.list[index].dt_txt.slice(8, 10) ||\n          data.list[index].dt_txt.slice(11, 13) !== '15'\n          ) {\n        index++;\n      }\n      dayIndices.push(index);\n      tmp = data.list[index].dt_txt.slice(8, 10);\n    }\n    return dayIndices;\n  };\n\n  render() {\n    const WeatherBoxes = () => {\n      const weatherBoxes = this.state.days.slice(1).map(day => (\n          <li id>\n            <WeatherBox {...day} />\n          </li>\n      ));\n\n      return <ul id={weatherBoxes} className='weather-box-list'>{weatherBoxes}</ul>;\n    };\n\n    return (\n        <div className='App'>\n          <header className='App-header'>\n            <MainWeatherWindow data={this.state.days[0]} city={this.state.city}>\n              <CityInput city={this.state.city} makeApiCall={this.makeApiCall.bind(this)} />\n              <WeatherBoxes />\n            </MainWeatherWindow>\n          </header>\n        </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}